unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, VclTee.TeeGDIPlus, VCLTee.TeEngine,
  VCLTee.Series, Vcl.StdCtrls, Vcl.Grids, Vcl.ExtCtrls, VCLTee.TeeProcs,
  VCLTee.Chart;

type
  TForm1 = class(TForm)
    Chart1: TChart;
    StringGrid1: TStringGrid;
    Button1: TButton;
    Series1: TLineSeries;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

function Pright(i:integer; t:real):real;         //Рекурентная функция для правого участка отрезка
begin
  if i=0 then result:=1
  else if i = 1 then result:=t
  else result:=Pright(i-1,t)*(t+i-1)/i ;
end;

function PLeft(i:integer; t:real):real;          //для левого участка отрезка
begin
  if i=0 then result:=1
  else if i = 1 then result:=t
  else result:=PLeft(i-1,t)*(t-i+1)/i ;
end;

procedure TForm1.Button1Click(Sender: TObject);
var
  i, n,j: Integer;
  g:array of array of real;
  xr,xmax,xmin,y:real;

function P(x:real):real;
var IsOnLeft:boolean; i:integer; sum:real;
begin
  sum:=0;
  if  (x>=xmin) and (x<=(xmin+xmax)/2) then IsOnLeft := true
  else if (x>(xmin+xmax)/2) and (x<=xmax) then IsOnLeft := false;

  for I := 0 to n-1 do
  begin
    if IsOnLeft then sum:=sum+PLeft(i,(x-xmax)/(g[1,0]-g[0,0]))*g[n-1,i+1]

    else if (not IsOnLeft) then sum:=sum+Pright(i,(x-xmin)/(g[1,0]-g[0,0]))*g[i+1,i];
  end;
  result:=sum;
end;

begin
 n:=stringgrid1.ColCount;
 setlength(g,n);
 for I := 0 to n-1 do
  Setlength(g[i],n+2);

 for I := 0 to n-1 do
  begin
    g[i,0]:=StrToFloat(Stringgrid1.cells[i,0]); //Это xi
    g[i,1]:=StrToFloat(Stringgrid1.cells[i,1]); //это yi
  end;
  // У нас G - Массив конечных разностей. Поэтому:
  for I := 1 to n-1 do
    begin
      for j := i to n-1 do
        g[i,j+1]:=g[i,j]-g[i-1,j];
    end;

  //Теперь мы полностью составили массив G и можем с ним работать, занимаясь интерпоялцией
 xmin:=g[0,0];
 xmax:=g[n-1,0];
 xr:=xmin;
 while (xr<xmax) do
  begin
    y:=p(xr);
    Chart1.Series[0].AddXY(xr,y);
    xr:=xr+0.01;
  end;
  g:=nil; //Очищаем динамический массив
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  stringgrid1.Cells[0,0]:= '1,8';
  stringgrid1.Cells[0,0]:= '1,83';
  stringgrid1.Cells[0,0]:= '1,86';
  stringgrid1.Cells[0,0]:= '1,89';
  stringgrid1.Cells[0,0]:= '1,92';
  stringgrid1.Cells[0,0]:= '1,95';
  stringgrid1.Cells[0,0]:= '1,98';

  stringgrid1.Cells[0,0]:= '-3,1107';
  stringgrid1.Cells[0,0]:= '-2,5626';
  stringgrid1.Cells[0,0]:= '-2,1197';
  stringgrid1.Cells[0,0]:= '-1,7525';
  stringgrid1.Cells[0,0]:= '-1,4417';
  stringgrid1.Cells[0,0]:= '-1,1738';
  stringgrid1.Cells[0,0]:= '-0,9396';
end;

end.
